"use strict";function t(t){return t&&t.__esModule?t:{default:t}}var e=require("crypto"),n=t(e),i=require("path"),s=t(i),r=require("execa"),u=t(r),a=require("glob"),o=t(a),c=require("fs-jetpack"),l=t(c),f=require("lodash.includes"),h=t(f),d=require("listr"),g=t(d),p=require("mkdirp"),m=t(p),z=require("xdg-basedir"),j=t(z);const w=s.default.join(j.default.data,"zsh_plugins");(0,m.default)(w);let k=["Tarrasch/zsh-colors","zsh-users/zsh-syntax-highlighting","zsh-users/zsh-history-substring-search","zsh-users/zsh-completions","mafredri/zsh-async","sindresorhus/pure"];class q{constructor(t){this.name=t;const e=n.default.createHash("sha1");e.update(t),this.hash=e.digest("hex")}get clonePath(){return s.default.join(w,this.hash)}}const y=[],x=[],b=new g.default([{title:"Getting Paths for cloning…",task:function(){k=k.map((t=>new q(t)))}},{title:"Cleaning up…",task:function(){const t=k.map((t=>t.hash));t.push("plugins.zsh");const e=l.default.list(w);e&&e.filter((e=>!(0,h.default)(t,e))).forEach((t=>l.default.remove(s.default.join(w,t))))}},{title:"Cloning plugins…",task:function(){return new g.default(k.map((t=>{const e=t.name,n=t.clonePath;return{title:`Cloning ${e}...`,task:function(){switch(l.default.exists(s.default.join(n,".git"))){case!1:return l.default.exists(n)&&l.default.remove(n),(0,u.default)("git",["clone","--recursive","--",`https://github.com/${e}.git`,n]);case"dir":return u.default.sync("git",["fetch","--all"],{cwd:n}),(0,u.default)("git",["reset","--hard","origin/master","--"],{cwd:n});default:throw new Error("Invalid clone target!")}}}})),{concurrent:!0})}},{title:"Getting file ready to write…",task:function(){return new g.default(k.map((t=>{return{title:`Getting ${t.name} ready...`,task:function(){const e=t.name.split("/")[1],n=[`${e}.plugin.zsh`,"*.plugin.zsh","init.zsh","*.zsh","*.sh"];x.push(t.clonePath);for(let i=0;i<n.length;i++){const e=o.default.sync(s.default.join(t.clonePath,n[i]));if(0!==e.length){y.push(e[0]);break}}}}})),{concurrent:!0})}},{title:`Writing to ${s.default.join(w,"plugins.zsh")}…`,task:function(){return l.default.writeAsync(s.default.join(w,"plugins.zsh"),y.map((t=>`source ${t}`)).join("\n")+"\n"+x.map((t=>`fpath+=${t}`)).join("\n"))}}]);b.run().catch((t=>{console.error(t),process.exit(1)}));
