"use strict";exports.__esModule=!0,exports.Plugin=exports.paths=void 0;var t=d(require("path")),e=d(require("findup-sync")),i=d(require("fs-extra")),a=d(require("lodash/isString")),o=d(require("lodash/isFunction")),s=d(require("nodegit")),n=d(require("xdg-basedir"));function d(t){return t&&t.__esModule?t:{default:t}}const r={downloadDir:t.default.join(n.default.data,"zsh-goggles"),configFile:t.default.join(n.default.config,"zsh-goggles","config.toml"),sourceFile:t.default.join(n.default.data,"zsh-goggles","plugins.zsh")};exports.paths=r;const h={standalone:!0,source:!0,fpath:!0};exports.Plugin=class{constructor([e,i]){if(this.name=e,this.downloadPath=t.default.join(r.downloadDir,e),(0,a.default)(i))return this.config={...h},void(this.config.github=i);this.config={...h,...i}}get fpath(){const e=this.config.fpath;if(!1!==e)return(0,a.default)(e)?t.default.join(this.downloadPath,e):(0,o.default)(e)?e(this.downloadPath):this.downloadPath}get sourceFile(){const i=this.config.source;if(!1===i)return;if((0,a.default)(i))return t.default.join(this.downloadPath,i);if((0,o.default)(i))return i(this.downloadPath);const s=[`${this.name}?(.plugin).?(z)sh`,"*.plugin.zsh","init.zsh","*.zsh","*.sh"];return(0,e.default)(s,{cwd:this.downloadPath,nocase:!0,maxdepth:0})}async entry(){let t="";return this.sourceFile&&(this.config.standalone?t+=await i.default.readFile(this.sourceFile):t+=`source ${this.sourceFile}`),this.fpath&&(t+=`\nfpath+=${this.fpath}`),t}async download(){await s.default.Clone(`https://github.com/${this.config.github}.git`,this.downloadPath)}async update(){const t=await s.default.Repository.open(this.downloadPath);await t.fetchAll(),await t.mergeBranches("master","origin/master")}};