"use strict";function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _asyncToGenerator(t){return function(){var e=t.apply(this,arguments);return new Promise(function(t,i){function n(o,r){try{var a=e[o](r),u=a.value}catch(t){return void i(t)}if(!a.done)return Promise.resolve(u).then(function(t){n("next",t)},function(t){n("throw",t)});t(u)}return n("next")})}}exports.__esModule=!0,exports.Plugin=exports.paths=void 0;var _path=require("path"),_path2=_interopRequireDefault(_path),_findupSync=require("findup-sync"),_findupSync2=_interopRequireDefault(_findupSync),_fsExtra=require("fs-extra"),_fsExtra2=_interopRequireDefault(_fsExtra),_isString=require("lodash/isString"),_isString2=_interopRequireDefault(_isString),_isFunction=require("lodash/isFunction"),_isFunction2=_interopRequireDefault(_isFunction),_nodegit=require("nodegit"),_nodegit2=_interopRequireDefault(_nodegit),_xdgBasedir=require("xdg-basedir"),_xdgBasedir2=_interopRequireDefault(_xdgBasedir);const paths=exports.paths={downloadDir:_path2.default.join(_xdgBasedir2.default.data,"zsh-goggles"),configFile:_path2.default.join(_xdgBasedir2.default.config,"zsh-goggles","config.toml"),sourceFile:_path2.default.join(_xdgBasedir2.default.data,"zsh-goggles","plugins.zsh")},defaultConfig={standalone:!0,source:!0,fpath:!0};class Plugin{constructor([t,e]){this.name=t,this.downloadPath=_path2.default.join(paths.downloadDir,t),this.config={},Object.assign(this.config,defaultConfig),(0,_isString2.default)(e)?this.config.github=e:Object.assign(this.config,e)}get fpath(){const t=this.config.fpath;if(!1!==t)return(0,_isString2.default)(t)?_path2.default.join(this.downloadPath,t):(0,_isFunction2.default)(t)?t(this.downloadPath):this.downloadPath}get sourceFile(){const t=this.config.source;if(!1===t)return;if((0,_isString2.default)(t))return _path2.default.join(this.downloadPath,t);if((0,_isFunction2.default)(t))return t(this.downloadPath);const e=[`${this.name}?(.plugin).?(z)sh`,"*.plugin.zsh","init.zsh","*.zsh","*.sh"];return(0,_findupSync2.default)(e,{cwd:this.downloadPath,nocase:!0,maxdepth:0})}entry(){var t=this;return _asyncToGenerator(function*(){let e="";return t.sourceFile&&(t.config.standalone?e+=(yield _fsExtra2.default.read(t.sourceFile)):e+=`source ${t.sourceFile}`),t.fpath&&(e+=`\nfpath+=${t.fpath}`),e})()}download(){var t=this;return _asyncToGenerator(function*(){yield _nodegit2.default.Clone(`https://github.com/${t.config.github}.git`,t.downloadPath)})()}update(){var t=this;return _asyncToGenerator(function*(){const e=yield _nodegit2.default.Repository.open(t.downloadPath);yield e.fetchAll(),yield e.mergeBranches("master","origin/master")})()}}exports.Plugin=Plugin;