"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function r(i,o){try{var u=t[i](o),a=u.value}catch(e){return void n(e)}if(!u.done)return Promise.resolve(a).then(function(e){r("next",e)},function(e){r("throw",e)});e(a)}return r("next")})}}exports.__esModule=!0,exports.cleanupTask=exports.writeTask=exports.downloadTasks=void 0;let writeTask=exports.writeTask=(()=>{var e=_asyncToGenerator(function*(){yield _fsJetpack2.default.writeAsync(sourceFile,`${targetEntries.join("\n")}`)});return function(){return e.apply(this,arguments)}})(),cleanupTask=exports.cleanupTask=(()=>{var e=_asyncToGenerator(function*(){const e=[...plugins.map(function(e){return e.name}),"plugins.zsh"],t=_fsJetpack2.default.list(downloadDir);t&&t.filter(function(t){return!(0,_includes2.default)(e,t)}).forEach(function(e){return _fsJetpack2.default.remove(_path2.default.join(downloadDir,e))})});return function(){return e.apply(this,arguments)}})();var _path=require("path"),_path2=_interopRequireDefault(_path),_fsJetpack=require("fs-jetpack"),_fsJetpack2=_interopRequireDefault(_fsJetpack),_entries=require("lodash/entries"),_entries2=_interopRequireDefault(_entries),_includes=require("lodash/includes"),_includes2=_interopRequireDefault(_includes),_mkdirp=require("mkdirp"),_mkdirp2=_interopRequireDefault(_mkdirp),_toml=require("toml"),_toml2=_interopRequireDefault(_toml),_index=require("./index");const configFile=_index.paths.configFile,downloadDir=_index.paths.downloadDir,sourceFile=_index.paths.sourceFile;(0,_mkdirp2.default)(downloadDir);const config=_toml2.default.parse(_fsJetpack2.default.read(configFile,"utf8")),plugins=(0,_entries2.default)(config),targetEntries=new Array(plugins.length),downloadTasks=exports.downloadTasks=plugins.map((e,t)=>{return{title:`Downloading ${e[1].github||e[1]}...`,task(){return _asyncToGenerator(function*(){const n=plugins[t]=new _index.Plugin(e);_fsJetpack2.default.exists(n.downloadPath)?yield n.update():yield n.download(),targetEntries[t]=yield n.entry()})()}}});