"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _asyncToGenerator(e){return function(){var r=e.apply(this,arguments);return new Promise(function(e,t){function n(a,i){try{var u=r[a](i),o=u.value}catch(e){return void t(e)}return u.done?void e(o):Promise.resolve(o).then(function(e){n("next",e)},function(e){n("throw",e)})}return n("next")})}}exports.__esModule=!0,exports.cleanupTask=exports.writeTask=exports.downloadTasks=void 0;var writeTask=exports.writeTask=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,_fsJetpack2.default.writeAsync(sourceFile,`${targetEntries.join("\n")}`);case 2:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),cleanupTask=exports.cleanupTask=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(){var r,t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=[].concat(plugins.map(function(e){return e.name}),["plugins.zsh"]),t=_fsJetpack2.default.list(downloadDir)){e.next=4;break}return e.abrupt("return");case 4:t.filter(function(e){return!(0,_includes2.default)(r,e)}).forEach(function(e){return _fsJetpack2.default.remove(_path2.default.join(downloadDir,e))});case 5:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),_path=require("path"),_path2=_interopRequireDefault(_path),_fsJetpack=require("fs-jetpack"),_fsJetpack2=_interopRequireDefault(_fsJetpack),_entries=require("lodash/entries"),_entries2=_interopRequireDefault(_entries),_includes=require("lodash/includes"),_includes2=_interopRequireDefault(_includes),_mkdirp=require("mkdirp"),_mkdirp2=_interopRequireDefault(_mkdirp),_toml=require("toml"),_toml2=_interopRequireDefault(_toml),_index=require("./index"),configFile=_index.paths.configFile,downloadDir=_index.paths.downloadDir,sourceFile=_index.paths.sourceFile;(0,_mkdirp2.default)(downloadDir);var config=_toml2.default.parse(_fsJetpack2.default.read(configFile,"utf8")),plugins=(0,_entries2.default)(config),targetEntries=new Array(plugins.length),downloadTasks=exports.downloadTasks=plugins.map(function(e,r){return{title:`Downloading ${e[1].github||e[1]}...`,task(){var t=this;return _asyncToGenerator(regeneratorRuntime.mark(function n(){var a;return regeneratorRuntime.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(a=plugins[r]=new _index.Plugin(e),!_fsJetpack2.default.exists(a.downloadPath)){t.next=6;break}return t.next=4,a.update();case 4:t.next=8;break;case 6:return t.next=8,a.download();case 8:return t.next=10,a.entry();case 10:targetEntries[r]=t.sent;case 11:case"end":return t.stop()}},n,t)}))()}}});