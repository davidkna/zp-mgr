"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,r){function n(i,a){try{var o=t[i](a),u=o.value}catch(e){return void r(e)}if(!o.done)return Promise.resolve(u).then(function(e){n("next",e)},function(e){n("throw",e)});e(u)}return n("next")})}}exports.__esModule=!0,exports.cleanupTask=exports.writeTask=exports.downloadTasks=void 0;let writeTask=exports.writeTask=(()=>{var e=_asyncToGenerator(function*(){yield _fsExtra2.default.writeFile(sourceFile,`${targetEntries.join("\n")}`)});return function(){return e.apply(this,arguments)}})(),cleanupTask=exports.cleanupTask=(()=>{var e=_asyncToGenerator(function*(){const e=[...plugins.map(function(e){return e.name}),"plugins.zsh"],t=yield _fsExtra2.default.readdir(downloadDir);t&&t.filter(function(t){return!(0,_includes2.default)(e,t)}).forEach(function(e){return _fsExtra2.default.removeSync(_path2.default.join(downloadDir,e))})});return function(){return e.apply(this,arguments)}})();var _path=require("path"),_path2=_interopRequireDefault(_path),_entries=require("lodash/entries"),_entries2=_interopRequireDefault(_entries),_fsExtra=require("fs-extra"),_fsExtra2=_interopRequireDefault(_fsExtra),_includes=require("lodash/includes"),_includes2=_interopRequireDefault(_includes),_mkdirp=require("mkdirp"),_mkdirp2=_interopRequireDefault(_mkdirp),_toml=require("toml"),_toml2=_interopRequireDefault(_toml),_index=require("./index");const configFile=_index.paths.configFile,downloadDir=_index.paths.downloadDir,sourceFile=_index.paths.sourceFile;(0,_mkdirp2.default)(downloadDir);const config=_toml2.default.parse(_fsExtra2.default.readFileSync(configFile,"utf8")),plugins=(0,_entries2.default)(config),targetEntries=new Array(plugins.length),downloadTasks=exports.downloadTasks=plugins.map((e,t)=>({title:`Downloading ${e[1].github||e[1]}...`,task:()=>_asyncToGenerator(function*(){plugins[t]=new _index.Plugin(e),(yield _fsExtra2.default.pathExists(plugins[t].downloadPath))?yield plugins[t].update():yield plugins[t].download(),targetEntries[t]=yield plugins[t].entry()})()}));